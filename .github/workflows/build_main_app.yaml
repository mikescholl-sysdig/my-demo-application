name: Build Application

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  APP_NAME: node-js-frontend
  REGISTRY: ghcr.io/mikescholl-sysdig/my-demo-application

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker metadata tag set (or use some another method)
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY}}/${{ env.APP_NAME }}
        tags: |
          type=ref,event=pr,pattern={{branch}}
          type=sha,pattern={{sha}},prefix=,event=pr
          type=sha,pattern={{branch}}-{{sha}},prefix=,event=pr
        labels: |
          org.opencontainers.image.title=${{ env.APP_NAME }}
          org.opencontainers.image.author=michael.scholl+mydemoapp@sysdig.com

    - name: Build image for scanning
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}   
        load: true

    - name: Scan image with Sysdig Github Action v1 
      id: scan
      uses: sysdiglabs/scan-action@v3
      with:
        image-tag: ${{ steps.meta.outputs.tags }}
        sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_API_TOKEN }}
        sysdig-skip-tls: true
        run-as-user: root
        dockerfile: "Dockerfile"
        ignore-failed-scan: true
        sysdig-secure-url: "https://us2.app.sysdig.com"
        input-type: docker-daemon

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        path: ${{ steps.scan.outputs.sarifReport }}
        name: sysdig

    - name: Download and run Sysdig Scan for Image
      run: |
        curl -LO "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/$(curl -L -s https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt)/linux/amd64/sysdig-cli-scanner"
        chmod +x ./sysdig-cli-scanner
        for TAG in $( echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' ' )
        do
          echo "Scanning ${TAG}"
          SECURE_API_TOKEN=${{ secrets.SYSDIG_SECURE_API_TOKEN }} ./sysdig-cli-scanner --loglevel=debug --console-log --apiurl https://us2.app.sysdig.com docker://${TAG} 
        done
      shell: bash
      continue-on-error: true
    - name: Log in to registry
      # This is where you will update the PAT to GITHUB_TOKEN
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Push image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
